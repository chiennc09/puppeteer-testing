{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 0,
    "pending": 0,
    "failures": 8,
    "start": "2025-06-12T13:37:55.058Z",
    "end": "2025-06-12T13:38:37.676Z",
    "duration": 42618,
    "testsRegistered": 8,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4e3528b3-56ea-490a-8d97-b35fccc4b9f6",
      "title": "",
      "fullFile": "E:\\Working\\Testing\\puppeteer-testing\\tests\\order.test.js",
      "file": "\\tests\\order.test.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 11,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const chai = await import('chai');\nexpect = chai.expect;",
          "err": {},
          "uuid": "ba0db6d0-859c-4268-a1f2-ce3b5be8b0b5",
          "parentUUID": "4e3528b3-56ea-490a-8d97-b35fccc4b9f6",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a732e808-3b43-4f7d-9911-476a2f6fb859",
          "title": "Order Functionality",
          "fullFile": "E:\\Working\\Testing\\puppeteer-testing\\tests\\order.test.js",
          "file": "\\tests\\order.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Order Functionality\"",
              "fullTitle": "Order Functionality \"before all\" hook in \"Order Functionality\"",
              "timedOut": false,
              "duration": 1209,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "browser = await puppeteer.launch({\nheadless: false,\nslowMo: -20,\nargs: ['--start-maximized'],\n  });\npage = await browser.newPage();\nawait page.setViewport({ width: 1280, height: 720 });",
              "err": {},
              "uuid": "67a4a852-5610-4787-a8d6-3b6bf4dd175a",
              "parentUUID": "a732e808-3b43-4f7d-9911-476a2f6fb859",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Order Functionality\"",
              "fullTitle": "Order Functionality \"after all\" hook in \"Order Functionality\"",
              "timedOut": false,
              "duration": 407,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await browser.close();",
              "err": {},
              "uuid": "cc0acf40-7142-4a27-b725-fbe5332f620f",
              "parentUUID": "a732e808-3b43-4f7d-9911-476a2f6fb859",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Đặt hàng khi thông tin được để trống",
              "fullTitle": "Order Functionality Đặt hàng khi thông tin được để trống",
              "timedOut": false,
              "duration": 8126,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await page.goto(config.baseUrl + '/macbook-pro-m4-14-inch-2024-open-box/');\nawait clickElement(page, '.button.buy_now_button');\nawait waitForElement(page, '#customer_details', { timeout: config.timeout });\nawait page.evaluate(() => {\n  const inputs = document.getElementsByTagName('input');\n  for (let input of inputs) {\n      input.value = '';\n  }\n  });\nawait typeText(page, '#billing_first_name', testCase.firstName);\nawait typeText(page, '#billing_last_name', testCase.lastname);\nawait typeText(page, '#billing_address_1', testCase.address);\nawait typeText(page, '#billing_address_2', testCase.apartment);\nawait typeText(page, '#billing_city', testCase.city);\nawait typeText(page, '#billing_phone', testCase.phoneNumber);\n// Đợi container load style xong\nawait page.waitForFunction(\n  (selector) => {\n    const container = document.querySelector(selector);\n    const button = container?.querySelector('button[name=\"place_order\"]');\n    return container && button && !button.disabled && window.getComputedStyle(button).display !== 'none';\n  },\n  {},\n  '.checkout-sidebar.sm-touch-scroll'\n);\n\nawait clickElement(page, 'button[id=\"place_order\"]');\nif (testCase.expectResults) {\n  await waitForElement(page, '.is-well.col-inner.entry-content', { timeout: config.timeout });\n  const currentUrl = page.url();\n  expect(currentUrl).to.include(testCase.navigation);\n} else {\n  const validationMessage = await waitForElement(page, '.woocommerce-error.message-wrapper');\n  if(validationMessage) {\n      const errorText = await page.$eval('.woocommerce-error.message-wrapper', el => el.textContent);\n      expect(errorText).to.include(expectedError);\n  } else {\n      throw new Error('Error message not found include ' + testCase.expectedError);\n  }\n}",
              "err": {
                "message": "TypeError: text is not iterable",
                "estack": "TypeError: text is not iterable\n    at CdpKeyboard.type (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\Input.js:130:28)\n    at CdpElementHandle.type (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\api\\ElementHandle.js:942:46)\n    at runNextTicks (node:internal/process/task_queues:60:5)\n    at listOnTimeout (node:internal/timers:545:9)\n    at process.processTimers (node:internal/timers:519:7)\n    at async CdpElementHandle.<anonymous> (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\api\\ElementHandle.js:132:24)\n    at async CdpFrame.type (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\api\\Frame.js:890:17)\n    at async typeText (utils\\helpers.js:14:3)\n    at async Context.<anonymous> (tests\\order.test.js:44:7)",
                "diff": null
              },
              "uuid": "b79f4613-c914-43e7-b332-7c387a7a469c",
              "parentUUID": "a732e808-3b43-4f7d-9911-476a2f6fb859",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Đặt hàng khi nhập đúng kiểu thông tin “Họ”, “Tên”",
              "fullTitle": "Order Functionality Đặt hàng khi nhập đúng kiểu thông tin “Họ”, “Tên”",
              "timedOut": true,
              "duration": 30006,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await page.goto(config.baseUrl + '/macbook-pro-m4-14-inch-2024-open-box/');\nawait clickElement(page, '.button.buy_now_button');\nawait waitForElement(page, '#customer_details', { timeout: config.timeout });\nawait page.evaluate(() => {\n  const inputs = document.getElementsByTagName('input');\n  for (let input of inputs) {\n      input.value = '';\n  }\n  });\nawait typeText(page, '#billing_first_name', testCase.firstName);\nawait typeText(page, '#billing_last_name', testCase.lastname);\nawait typeText(page, '#billing_address_1', testCase.address);\nawait typeText(page, '#billing_address_2', testCase.apartment);\nawait typeText(page, '#billing_city', testCase.city);\nawait typeText(page, '#billing_phone', testCase.phoneNumber);\n// Đợi container load style xong\nawait page.waitForFunction(\n  (selector) => {\n    const container = document.querySelector(selector);\n    const button = container?.querySelector('button[name=\"place_order\"]');\n    return container && button && !button.disabled && window.getComputedStyle(button).display !== 'none';\n  },\n  {},\n  '.checkout-sidebar.sm-touch-scroll'\n);\n\nawait clickElement(page, 'button[id=\"place_order\"]');\nif (testCase.expectResults) {\n  await waitForElement(page, '.is-well.col-inner.entry-content', { timeout: config.timeout });\n  const currentUrl = page.url();\n  expect(currentUrl).to.include(testCase.navigation);\n} else {\n  const validationMessage = await waitForElement(page, '.woocommerce-error.message-wrapper');\n  if(validationMessage) {\n      const errorText = await page.$eval('.woocommerce-error.message-wrapper', el => el.textContent);\n      expect(errorText).to.include(expectedError);\n  } else {\n      throw new Error('Error message not found include ' + testCase.expectedError);\n  }\n}",
              "err": {
                "message": "Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\Working\\Testing\\puppeteer-testing\\tests\\order.test.js)",
                "estack": "Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\Working\\Testing\\puppeteer-testing\\tests\\order.test.js)\n    at listOnTimeout (node:internal/timers:581:17)\n    at process.processTimers (node:internal/timers:519:7)",
                "diff": null
              },
              "uuid": "b793b3f0-e88f-4188-b606-b2dd7070c382",
              "parentUUID": "a732e808-3b43-4f7d-9911-476a2f6fb859",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Đặt hàng khi nhập có kí tự đặc biệt của “Họ”, “Tên”",
              "fullTitle": "Order Functionality Đặt hàng khi nhập có kí tự đặc biệt của “Họ”, “Tên”",
              "timedOut": false,
              "duration": 2838,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await page.goto(config.baseUrl + '/macbook-pro-m4-14-inch-2024-open-box/');\nawait clickElement(page, '.button.buy_now_button');\nawait waitForElement(page, '#customer_details', { timeout: config.timeout });\nawait page.evaluate(() => {\n  const inputs = document.getElementsByTagName('input');\n  for (let input of inputs) {\n      input.value = '';\n  }\n  });\nawait typeText(page, '#billing_first_name', testCase.firstName);\nawait typeText(page, '#billing_last_name', testCase.lastname);\nawait typeText(page, '#billing_address_1', testCase.address);\nawait typeText(page, '#billing_address_2', testCase.apartment);\nawait typeText(page, '#billing_city', testCase.city);\nawait typeText(page, '#billing_phone', testCase.phoneNumber);\n// Đợi container load style xong\nawait page.waitForFunction(\n  (selector) => {\n    const container = document.querySelector(selector);\n    const button = container?.querySelector('button[name=\"place_order\"]');\n    return container && button && !button.disabled && window.getComputedStyle(button).display !== 'none';\n  },\n  {},\n  '.checkout-sidebar.sm-touch-scroll'\n);\n\nawait clickElement(page, 'button[id=\"place_order\"]');\nif (testCase.expectResults) {\n  await waitForElement(page, '.is-well.col-inner.entry-content', { timeout: config.timeout });\n  const currentUrl = page.url();\n  expect(currentUrl).to.include(testCase.navigation);\n} else {\n  const validationMessage = await waitForElement(page, '.woocommerce-error.message-wrapper');\n  if(validationMessage) {\n      const errorText = await page.$eval('.woocommerce-error.message-wrapper', el => el.textContent);\n      expect(errorText).to.include(expectedError);\n  } else {\n      throw new Error('Error message not found include ' + testCase.expectedError);\n  }\n}",
              "err": {
                "message": "TargetCloseError: Waiting for selector `#customer_details` failed: Protocol error (Runtime.callFunctionOn): Target closed",
                "estack": "TargetCloseError: Waiting for selector `#customer_details` failed: Protocol error (Runtime.callFunctionOn): Target closed\n    at CallbackRegistry.clear (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\common\\CallbackRegistry.js:81:36)\n    at CdpCDPSession.onClosed (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\CdpSession.js:114:25)\n    at Connection.onMessage (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\Connection.js:140:25)\n    at runNextTicks (node:internal/process/task_queues:60:5)\n    at listOnTimeout (node:internal/timers:545:9)\n    at process.processTimers (node:internal/timers:519:7)",
                "diff": null
              },
              "uuid": "432ea799-9f4f-4552-9074-5b78299940a5",
              "parentUUID": "a732e808-3b43-4f7d-9911-476a2f6fb859",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Đặt hàng với đúng địa chỉ",
              "fullTitle": "Order Functionality Đặt hàng với đúng địa chỉ",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await page.goto(config.baseUrl + '/macbook-pro-m4-14-inch-2024-open-box/');\nawait clickElement(page, '.button.buy_now_button');\nawait waitForElement(page, '#customer_details', { timeout: config.timeout });\nawait page.evaluate(() => {\n  const inputs = document.getElementsByTagName('input');\n  for (let input of inputs) {\n      input.value = '';\n  }\n  });\nawait typeText(page, '#billing_first_name', testCase.firstName);\nawait typeText(page, '#billing_last_name', testCase.lastname);\nawait typeText(page, '#billing_address_1', testCase.address);\nawait typeText(page, '#billing_address_2', testCase.apartment);\nawait typeText(page, '#billing_city', testCase.city);\nawait typeText(page, '#billing_phone', testCase.phoneNumber);\n// Đợi container load style xong\nawait page.waitForFunction(\n  (selector) => {\n    const container = document.querySelector(selector);\n    const button = container?.querySelector('button[name=\"place_order\"]');\n    return container && button && !button.disabled && window.getComputedStyle(button).display !== 'none';\n  },\n  {},\n  '.checkout-sidebar.sm-touch-scroll'\n);\n\nawait clickElement(page, 'button[id=\"place_order\"]');\nif (testCase.expectResults) {\n  await waitForElement(page, '.is-well.col-inner.entry-content', { timeout: config.timeout });\n  const currentUrl = page.url();\n  expect(currentUrl).to.include(testCase.navigation);\n} else {\n  const validationMessage = await waitForElement(page, '.woocommerce-error.message-wrapper');\n  if(validationMessage) {\n      const errorText = await page.$eval('.woocommerce-error.message-wrapper', el => el.textContent);\n      expect(errorText).to.include(expectedError);\n  } else {\n      throw new Error('Error message not found include ' + testCase.expectedError);\n  }\n}",
              "err": {
                "message": "TargetCloseError: Protocol error (Page.navigate): Session closed. Most likely the page has been closed.",
                "estack": "TargetCloseError: Protocol error (Page.navigate): Session closed. Most likely the page has been closed.\n    at CdpCDPSession.send (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\CdpSession.js:71:35)\n    at navigate (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\Frame.js:172:51)\n    at CdpFrame.goto (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\Frame.js:150:17)\n    at CdpFrame.<anonymous> (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\util\\decorators.js:109:27)\n    at CdpPage.goto (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\api\\Page.js:574:43)\n    at Context.<anonymous> (tests\\order.test.js:33:18)\n    at process.processImmediate (node:internal/timers:483:21)",
                "diff": null
              },
              "uuid": "4cf4dbe3-9182-4b78-87c6-0bc4dd0286ac",
              "parentUUID": "a732e808-3b43-4f7d-9911-476a2f6fb859",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Đặt hàng với sai địa chỉ, có kí tự đặc biệt",
              "fullTitle": "Order Functionality Đặt hàng với sai địa chỉ, có kí tự đặc biệt",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await page.goto(config.baseUrl + '/macbook-pro-m4-14-inch-2024-open-box/');\nawait clickElement(page, '.button.buy_now_button');\nawait waitForElement(page, '#customer_details', { timeout: config.timeout });\nawait page.evaluate(() => {\n  const inputs = document.getElementsByTagName('input');\n  for (let input of inputs) {\n      input.value = '';\n  }\n  });\nawait typeText(page, '#billing_first_name', testCase.firstName);\nawait typeText(page, '#billing_last_name', testCase.lastname);\nawait typeText(page, '#billing_address_1', testCase.address);\nawait typeText(page, '#billing_address_2', testCase.apartment);\nawait typeText(page, '#billing_city', testCase.city);\nawait typeText(page, '#billing_phone', testCase.phoneNumber);\n// Đợi container load style xong\nawait page.waitForFunction(\n  (selector) => {\n    const container = document.querySelector(selector);\n    const button = container?.querySelector('button[name=\"place_order\"]');\n    return container && button && !button.disabled && window.getComputedStyle(button).display !== 'none';\n  },\n  {},\n  '.checkout-sidebar.sm-touch-scroll'\n);\n\nawait clickElement(page, 'button[id=\"place_order\"]');\nif (testCase.expectResults) {\n  await waitForElement(page, '.is-well.col-inner.entry-content', { timeout: config.timeout });\n  const currentUrl = page.url();\n  expect(currentUrl).to.include(testCase.navigation);\n} else {\n  const validationMessage = await waitForElement(page, '.woocommerce-error.message-wrapper');\n  if(validationMessage) {\n      const errorText = await page.$eval('.woocommerce-error.message-wrapper', el => el.textContent);\n      expect(errorText).to.include(expectedError);\n  } else {\n      throw new Error('Error message not found include ' + testCase.expectedError);\n  }\n}",
              "err": {
                "message": "TargetCloseError: Protocol error (Page.navigate): Session closed. Most likely the page has been closed.",
                "estack": "TargetCloseError: Protocol error (Page.navigate): Session closed. Most likely the page has been closed.\n    at CdpCDPSession.send (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\CdpSession.js:71:35)\n    at navigate (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\Frame.js:172:51)\n    at CdpFrame.goto (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\Frame.js:150:17)\n    at CdpFrame.<anonymous> (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\util\\decorators.js:109:27)\n    at CdpPage.goto (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\api\\Page.js:574:43)\n    at Context.<anonymous> (tests\\order.test.js:33:18)\n    at process.processImmediate (node:internal/timers:483:21)",
                "diff": null
              },
              "uuid": "f967c416-e54c-4637-bb4f-9c6617c6867e",
              "parentUUID": "a732e808-3b43-4f7d-9911-476a2f6fb859",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Đặt hàng với đúng số điện thoại",
              "fullTitle": "Order Functionality Đặt hàng với đúng số điện thoại",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await page.goto(config.baseUrl + '/macbook-pro-m4-14-inch-2024-open-box/');\nawait clickElement(page, '.button.buy_now_button');\nawait waitForElement(page, '#customer_details', { timeout: config.timeout });\nawait page.evaluate(() => {\n  const inputs = document.getElementsByTagName('input');\n  for (let input of inputs) {\n      input.value = '';\n  }\n  });\nawait typeText(page, '#billing_first_name', testCase.firstName);\nawait typeText(page, '#billing_last_name', testCase.lastname);\nawait typeText(page, '#billing_address_1', testCase.address);\nawait typeText(page, '#billing_address_2', testCase.apartment);\nawait typeText(page, '#billing_city', testCase.city);\nawait typeText(page, '#billing_phone', testCase.phoneNumber);\n// Đợi container load style xong\nawait page.waitForFunction(\n  (selector) => {\n    const container = document.querySelector(selector);\n    const button = container?.querySelector('button[name=\"place_order\"]');\n    return container && button && !button.disabled && window.getComputedStyle(button).display !== 'none';\n  },\n  {},\n  '.checkout-sidebar.sm-touch-scroll'\n);\n\nawait clickElement(page, 'button[id=\"place_order\"]');\nif (testCase.expectResults) {\n  await waitForElement(page, '.is-well.col-inner.entry-content', { timeout: config.timeout });\n  const currentUrl = page.url();\n  expect(currentUrl).to.include(testCase.navigation);\n} else {\n  const validationMessage = await waitForElement(page, '.woocommerce-error.message-wrapper');\n  if(validationMessage) {\n      const errorText = await page.$eval('.woocommerce-error.message-wrapper', el => el.textContent);\n      expect(errorText).to.include(expectedError);\n  } else {\n      throw new Error('Error message not found include ' + testCase.expectedError);\n  }\n}",
              "err": {
                "message": "TargetCloseError: Protocol error (Page.navigate): Session closed. Most likely the page has been closed.",
                "estack": "TargetCloseError: Protocol error (Page.navigate): Session closed. Most likely the page has been closed.\n    at CdpCDPSession.send (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\CdpSession.js:71:35)\n    at navigate (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\Frame.js:172:51)\n    at CdpFrame.goto (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\Frame.js:150:17)\n    at CdpFrame.<anonymous> (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\util\\decorators.js:109:27)\n    at CdpPage.goto (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\api\\Page.js:574:43)\n    at Context.<anonymous> (tests\\order.test.js:33:18)\n    at process.processImmediate (node:internal/timers:483:21)",
                "diff": null
              },
              "uuid": "a8dd9435-01f1-4a7c-86ff-3f6817685215",
              "parentUUID": "a732e808-3b43-4f7d-9911-476a2f6fb859",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Đặt hàng với số điện thoại có chứa kí tự đặc biệt",
              "fullTitle": "Order Functionality Đặt hàng với số điện thoại có chứa kí tự đặc biệt",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await page.goto(config.baseUrl + '/macbook-pro-m4-14-inch-2024-open-box/');\nawait clickElement(page, '.button.buy_now_button');\nawait waitForElement(page, '#customer_details', { timeout: config.timeout });\nawait page.evaluate(() => {\n  const inputs = document.getElementsByTagName('input');\n  for (let input of inputs) {\n      input.value = '';\n  }\n  });\nawait typeText(page, '#billing_first_name', testCase.firstName);\nawait typeText(page, '#billing_last_name', testCase.lastname);\nawait typeText(page, '#billing_address_1', testCase.address);\nawait typeText(page, '#billing_address_2', testCase.apartment);\nawait typeText(page, '#billing_city', testCase.city);\nawait typeText(page, '#billing_phone', testCase.phoneNumber);\n// Đợi container load style xong\nawait page.waitForFunction(\n  (selector) => {\n    const container = document.querySelector(selector);\n    const button = container?.querySelector('button[name=\"place_order\"]');\n    return container && button && !button.disabled && window.getComputedStyle(button).display !== 'none';\n  },\n  {},\n  '.checkout-sidebar.sm-touch-scroll'\n);\n\nawait clickElement(page, 'button[id=\"place_order\"]');\nif (testCase.expectResults) {\n  await waitForElement(page, '.is-well.col-inner.entry-content', { timeout: config.timeout });\n  const currentUrl = page.url();\n  expect(currentUrl).to.include(testCase.navigation);\n} else {\n  const validationMessage = await waitForElement(page, '.woocommerce-error.message-wrapper');\n  if(validationMessage) {\n      const errorText = await page.$eval('.woocommerce-error.message-wrapper', el => el.textContent);\n      expect(errorText).to.include(expectedError);\n  } else {\n      throw new Error('Error message not found include ' + testCase.expectedError);\n  }\n}",
              "err": {
                "message": "TargetCloseError: Protocol error (Page.navigate): Session closed. Most likely the page has been closed.",
                "estack": "TargetCloseError: Protocol error (Page.navigate): Session closed. Most likely the page has been closed.\n    at CdpCDPSession.send (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\CdpSession.js:71:35)\n    at navigate (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\Frame.js:172:51)\n    at CdpFrame.goto (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\Frame.js:150:17)\n    at CdpFrame.<anonymous> (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\util\\decorators.js:109:27)\n    at CdpPage.goto (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\api\\Page.js:574:43)\n    at Context.<anonymous> (tests\\order.test.js:33:18)\n    at process.processImmediate (node:internal/timers:483:21)",
                "diff": null
              },
              "uuid": "bb77b2c8-f7a7-498e-81ec-8ca195d4d081",
              "parentUUID": "a732e808-3b43-4f7d-9911-476a2f6fb859",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Đặt hàng với số điện thoại không đúng độ dài",
              "fullTitle": "Order Functionality Đặt hàng với số điện thoại không đúng độ dài",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await page.goto(config.baseUrl + '/macbook-pro-m4-14-inch-2024-open-box/');\nawait clickElement(page, '.button.buy_now_button');\nawait waitForElement(page, '#customer_details', { timeout: config.timeout });\nawait page.evaluate(() => {\n  const inputs = document.getElementsByTagName('input');\n  for (let input of inputs) {\n      input.value = '';\n  }\n  });\nawait typeText(page, '#billing_first_name', testCase.firstName);\nawait typeText(page, '#billing_last_name', testCase.lastname);\nawait typeText(page, '#billing_address_1', testCase.address);\nawait typeText(page, '#billing_address_2', testCase.apartment);\nawait typeText(page, '#billing_city', testCase.city);\nawait typeText(page, '#billing_phone', testCase.phoneNumber);\n// Đợi container load style xong\nawait page.waitForFunction(\n  (selector) => {\n    const container = document.querySelector(selector);\n    const button = container?.querySelector('button[name=\"place_order\"]');\n    return container && button && !button.disabled && window.getComputedStyle(button).display !== 'none';\n  },\n  {},\n  '.checkout-sidebar.sm-touch-scroll'\n);\n\nawait clickElement(page, 'button[id=\"place_order\"]');\nif (testCase.expectResults) {\n  await waitForElement(page, '.is-well.col-inner.entry-content', { timeout: config.timeout });\n  const currentUrl = page.url();\n  expect(currentUrl).to.include(testCase.navigation);\n} else {\n  const validationMessage = await waitForElement(page, '.woocommerce-error.message-wrapper');\n  if(validationMessage) {\n      const errorText = await page.$eval('.woocommerce-error.message-wrapper', el => el.textContent);\n      expect(errorText).to.include(expectedError);\n  } else {\n      throw new Error('Error message not found include ' + testCase.expectedError);\n  }\n}",
              "err": {
                "message": "TargetCloseError: Protocol error (Page.navigate): Session closed. Most likely the page has been closed.",
                "estack": "TargetCloseError: Protocol error (Page.navigate): Session closed. Most likely the page has been closed.\n    at CdpCDPSession.send (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\CdpSession.js:71:35)\n    at navigate (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\Frame.js:172:51)\n    at CdpFrame.goto (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\cdp\\Frame.js:150:17)\n    at CdpFrame.<anonymous> (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\util\\decorators.js:109:27)\n    at CdpPage.goto (node_modules\\puppeteer-core\\lib\\cjs\\puppeteer\\api\\Page.js:574:43)\n    at Context.<anonymous> (tests\\order.test.js:33:18)\n    at process.processImmediate (node:internal/timers:483:21)",
                "diff": null
              },
              "uuid": "66c50121-8016-49d7-9480-7cfe0ba867e9",
              "parentUUID": "a732e808-3b43-4f7d-9911-476a2f6fb859",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b79f4613-c914-43e7-b332-7c387a7a469c",
            "b793b3f0-e88f-4188-b606-b2dd7070c382",
            "432ea799-9f4f-4552-9074-5b78299940a5",
            "4cf4dbe3-9182-4b78-87c6-0bc4dd0286ac",
            "f967c416-e54c-4637-bb4f-9c6617c6867e",
            "a8dd9435-01f1-4a7c-86ff-3f6817685215",
            "bb77b2c8-f7a7-498e-81ec-8ca195d4d081",
            "66c50121-8016-49d7-9480-7cfe0ba867e9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40972,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.5.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}